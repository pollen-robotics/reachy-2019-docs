<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Program your robot on Reachy manual</title><link>https://pollen-robotics.github.io/reachy-2019-docs/docs/program-your-robot/</link><description>Recent content in Program your robot on Reachy manual</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://pollen-robotics.github.io/reachy-2019-docs/docs/program-your-robot/index.xml" rel="self" type="application/rss+xml"/><item><title>Instantiate Your Robot</title><link>https://pollen-robotics.github.io/reachy-2019-docs/docs/program-your-robot/instantiate-your-robot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pollen-robotics.github.io/reachy-2019-docs/docs/program-your-robot/instantiate-your-robot/</guid><description>Instantiate your robot The first step is to &amp;ldquo;instantiate&amp;rdquo; your robot. What we mean here, is that we will look for the different parts of your robot (connected via USBs on the Raspberry-Pi). We will identify them and check if all modules are connected.
We will also launch the synchronisation between the Raspberry-Pi and the different parts of your robot. The sensors value read from the robot will automatically be updated in your Python object.</description></item><item><title>Control The Arm</title><link>https://pollen-robotics.github.io/reachy-2019-docs/docs/program-your-robot/control-the-arm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pollen-robotics.github.io/reachy-2019-docs/docs/program-your-robot/control-the-arm/</guid><description>Control the arm Once you have instantiated the Reachy object, you are actually connected to your robot. This means that the hardware (sensors and effectors) are synced with their software equivalent. This synchronization loop runs at about 100Hz. In particular, this lets you retrieve the arm(s) state and send commands to make it move.
Before actually running some commands, it's important to make sure you are ready:
Make sure the robot is in a &amp;ldquo;safe&amp;rdquo; state (as shown in the images below for instance).</description></item><item><title>Control The Head</title><link>https://pollen-robotics.github.io/reachy-2019-docs/docs/program-your-robot/control-the-head/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pollen-robotics.github.io/reachy-2019-docs/docs/program-your-robot/control-the-head/</guid><description>Control the head The head is an important part of Reachy. It's where its camera are located and it participates a lot to the robot expressivity.
In the following sections, you will see how:
you can orient the head by controlling its neck, to move the antennas, and use its cameras. In the examples below, we will assume that you have already instantiated the head part of a Reachy as show in the section Instantiate Your Robot.</description></item><item><title>Pick and Place</title><link>https://pollen-robotics.github.io/reachy-2019-docs/docs/program-your-robot/pick-and-place/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pollen-robotics.github.io/reachy-2019-docs/docs/program-your-robot/pick-and-place/</guid><description>Pick and Place Prepare Reachy workspace With all motors compliant try if you can realise the task you would like the robot to do. We will realise most of the recordings using physical demonstration.
Choose a good starting point Define a resting position Rest between motions. Real rest position (even turn the motor compliant if possible).
The rest position should not force! Static forcing is how the motors heat the fastest.</description></item><item><title>AI &amp; Coral TPU</title><link>https://pollen-robotics.github.io/reachy-2019-docs/docs/program-your-robot/ai/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pollen-robotics.github.io/reachy-2019-docs/docs/program-your-robot/ai/</guid><description>AI &amp;amp; Google Coral TPU</description></item><item><title>Python's API</title><link>https://pollen-robotics.github.io/reachy-2019-docs/docs/program-your-robot/python-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pollen-robotics.github.io/reachy-2019-docs/docs/program-your-robot/python-api/</guid><description>Python's API The whole Python's API is available here: https://pollen-robotics.github.io/reachy/.
The inline documentation can also be accessed directly from Python using instrospection. For instance:
In [1]: from reachy import Reachy In [2]: print(Reachy.__doc__) Class representing the connection with the hardware robot. Connect and synchronize with the hardware robot. Args: left_arm (reachy.parts.LeftArm): left arm part if present or None if absent right_arm (reachy.parts.RightArm): right arm part if present or None if absent head (reachy.</description></item></channel></rss>